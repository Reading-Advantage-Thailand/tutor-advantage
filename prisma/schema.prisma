// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

// Base User model
model User {
  id        String   @id @default(uuid())
  email     String   @unique
  name      String
  role      String   @default("STUDENT") // Enum as string: "STUDENT", "TUTOR", "ADMIN"
  joinDate  DateTime @default(now())
  
  // Relations
  tutor     Tutor?
  student   Student?

  @@index([email])
}

// Tutor specific information
model Tutor {
  id                  String   @id
  user               User     @relation(fields: [id], references: [id])
  parentTutorId      String?
  directRevenue      Float    @default(0)
  cachedTotalRevenue Float    @default(0)
  cachedCommission   Float    @default(0)
  cachedNetCommission Float   @default(0)
  lastCalculationDate DateTime?
  
  // Relations
  parentTutor        Tutor?   @relation("TutorNetwork", fields: [parentTutorId], references: [id])
  downlineTutors     Tutor[]  @relation("TutorNetwork")
  students           Student[]
  lessons            Lesson[]
  revenueTransactions RevenueTransaction[]

  @@index([parentTutorId])
  @@index([lastCalculationDate])
}

// Student specific information
model Student {
  id            String     @id
  user          User       @relation(fields: [id], references: [id])
  cefrLevel     String    @default("A1") // Enum as string: "A1", "A2", "B1", "B2", "C1", "C2"
  assignedTutorId String
  
  // Relations
  assignedTutor Tutor     @relation(fields: [assignedTutorId], references: [id])
  lessons       Lesson[]
  progress      StudentProgress[]

  @@index([assignedTutorId])
}

model Lesson {
  id            String        @id @default(uuid())
  lessonPlanId  String
  tutorId       String
  studentId     String
  scheduledDate DateTime
  startTime     DateTime?
  endTime       DateTime?
  status        String       @default("SCHEDULED") // Enum as string: "SCHEDULED", "IN_PROGRESS", "COMPLETED", "CANCELED"
  currentStage  String?
  
  // Relations
  tutor         Tutor        @relation(fields: [tutorId], references: [id])
  student       Student      @relation(fields: [studentId], references: [id])

  @@index([tutorId])
  @@index([studentId])
  @@index([scheduledDate])
}

model Article {
  id               String     @id @default(uuid())
  title            String
  passage          String
  cefrLevel        String    // Enum as string: "A1", "A2", "B1", "B2", "C1", "C2"
  wordCount        Int
  targetVocabulary String    // JSON string array
  sentences        Sentence[]
}

model Sentence {
  id        String   @id @default(uuid())
  articleId String
  index     Int
  text      String
  startTime Float?
  endTime   Float?
  audioUrl  String?
  
  // Relations
  article   Article  @relation(fields: [articleId], references: [id])

  @@index([articleId])
}

model StudentProgress {
  id               String    @id @default(uuid())
  studentId        String
  lessonId         String
  completionStatus String    // "not_started", "in_progress", "completed"
  scores           String?   // JSON string for activity scores
  feedback         String?
  lastUpdated      DateTime  @default(now())
  
  // Relations
  student          Student   @relation(fields: [studentId], references: [id])

  @@index([studentId])
}

model RevenueTransaction {
  id             String            @id @default(uuid())
  tutorId        String
  amount         Float
  date           DateTime
  type           String            // Enum as string: "DIRECT_SALE", "NETWORK_COMMISSION"
  relatedTutorId String?
  
  // Relations
  tutor          Tutor             @relation(fields: [tutorId], references: [id])

  @@index([tutorId, date])
  @@index([type])
}
